/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   lifesycle.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: zogrir <zogrir@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/04/10 22:36:28 by zogrir            #+#    #+#             */
/*   Updated: 2025/04/10 22:39:18 by zogrir           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "philo.h"



int    philo_dead_check(t_philo *philo)
{
    pthread_mutex_lock(philo->data->dead_lock);
    if (*(philo->data->dead) == 1)
    {
        return (pthread_mutex_unlock(philo->data->dead_lock), 1);
    }
    pthread_mutex_unlock(philo->data->dead_lock);
    return (0);
}


void ft_message(t_philo *philo, char *mesg)
{
    pthread_mutex_lock(philo->data->print_lock);
    if (!philo_dead_check(philo) && philo->data->max_meals != 0)
        printf("%lld %d %s", get_time() - philo->data->start_time, philo->id, mesg);
    pthread_mutex_unlock(philo->data->print_lock);
}


void* ft_lifesycle(void *arg)
{
	t_philo *philo;
    
    philo = (t_philo *)arg;
     printf("yup1");
    if (philo->data->num_philos == 1)
    {
        ft_message(philo, "has taken a fork");
        return(0);
    }
    return(NULL);
}